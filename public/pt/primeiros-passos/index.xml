<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Charles C.D. – Primeiros Passos</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/</link><description>Recent content in Primeiros Passos on Charles C.D.</description><generator>Hugo -- gohugo.io</generator><atom:link href="http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/index.xml" rel="self" type="application/rss+xml"/><item><title>Primeiros Passos: Instalando via Helm</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/instalando-o-charles/instalando-via-helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/instalando-o-charles/instalando-via-helm/</guid><description>
&lt;hr>
&lt;div class="alert alert-info" role="alert">
Antes de prosseguir, tenha certeza de que todos os &lt;a href=".././#pre-requisitos">&lt;strong>pré-requisitos&lt;/strong>&lt;/a> estão devidamente instalados.
&lt;/div>
&lt;p>Esta instalação é indicada para quem possui uma infraestrutura já montada, devido um ambiente mais complexo ou há algumas limitações de segurança e/ou escalabilidade, o que exige uma &lt;strong>customização mais completa da instalação&lt;/strong> do CharlesCD.&lt;/p>
&lt;h3>Requisitos&lt;/h3>
&lt;p>Para realizar o processo, é necessário ter instalado:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">&lt;strong>Kubectl&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://helm.sh/docs/intro/install/">&lt;strong>Helm&lt;/strong> &lt;/a>&lt;/li>
&lt;/ul>
&lt;h3>Como instalar?&lt;/h3>
&lt;p>Aqui o principal diferencial é a customização. Para isso, foi disponibilizado um &lt;strong>template helm&lt;/strong> com todos os campos disponíveis para alteração, incluindo os de banco de dados e recursos consumidos. &lt;strong>Veja a&lt;/strong> &lt;a href="https://github.com/ZupIT/charlescd/tree/master/install/helm-chart">&lt;strong>documentação dos campos editáveis&lt;/strong>&lt;/a>&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;p>As senhas utilizadas pelo Charles estão armazenadas no arquivo &lt;a href="https://github.com/ZupIT/charlescd/blob/main/install/helm-chart/values.yaml">&lt;strong>values.yaml&lt;/strong>&lt;/a> As principais senhas para personalizar estão em:&lt;/p>
&lt;ul>
&lt;li>butler.database.password&lt;/li>
&lt;li>moove, database.password&lt;/li>
&lt;li>villager.database.password&lt;/li>
&lt;li>circlematcher.redis.password&lt;/li>
&lt;li>keycloak.keycloak.extraEnv.DB_PASSWORD&lt;/li>
&lt;li>postgresql.postgresqlPassword&lt;/li>
&lt;li>redis.password&lt;/li>
&lt;li>compass.database.password&lt;/li>
&lt;li>hermes.database.password&lt;/li>
&lt;li>rabbitmq.auth.password&lt;/li>
&lt;li>gate.database.password&lt;/li>
&lt;/ul>
&lt;p>Para mais detalhes, acesse o link citado acima, que possui toda a documentação dos campos editáveis.&lt;/p>
&lt;/div>
&lt;p>Para realizar a instalação com helm charts, basta executar o comando abaixo após a customização dos campos:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">// customize tudo que precisa no arquivo values.yaml antes de executar o seguinte comando
helm install charlescd &amp;lt;repo-folder&amp;gt; -n &amp;lt;namespace&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;p>É importante lembrar que, caso não seja feita nenhuma customização, o resultado final será igual à instalação via singlefile em que, por padrão, instalamos o PostgreSQL, Redis, Keycloak e Octopipe.&lt;/p>
&lt;p>Por isso, não deixe de customizar os campos caso queira algo gerenciável.&lt;/p>
&lt;/div>
&lt;h3>Troque a senha padrão (default password)&lt;/h3>
&lt;p>Depois de instalar o CharlesCD, troque algumas &lt;strong>senhas padrão&lt;/strong>, veja abaixo:&lt;/p>
&lt;p>&lt;strong>Senha do Keycloak&lt;/strong>:&lt;br>
&lt;strong>1.&lt;/strong> Acesse: &lt;strong>http://&amp;lt;charlescd-url&amp;gt;/keycloak/auth;&lt;/strong>&lt;br>
&lt;strong>2.&lt;/strong> Clique em &lt;strong>Administration Console;&lt;/strong>&lt;br>
&lt;strong>3.&lt;/strong> Insira a senha do usuário do Keycloak (admin - firstpassword) e troque a senha padrão.&lt;/p>
&lt;p>&lt;strong>Senha do CharlesCD:&lt;/strong>&lt;br>
Acesse o CharlesCD e logue com&lt;br>
&lt;strong>1. Usuário:&lt;/strong> &lt;strong>charlesadmin@admin&lt;br>
2. Senha&lt;/strong>: &lt;strong>charlesadmin;&lt;br>
3.&lt;/strong> Vá até &lt;strong>Account &amp;gt; Profile&lt;/strong> e depois em &lt;strong>Change Password&lt;/strong> e escolha sua nova senha.&lt;/p></description></item><item><title>Primeiros Passos: Seu primeiro acesso ao Charles</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/instalando-o-charles/seu-primeiro-acesso-ao-charles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/instalando-o-charles/seu-primeiro-acesso-ao-charles/</guid><description>
&lt;hr>
&lt;div class="alert alert-info" role="alert">
&lt;p>No primeiro acesso, &lt;strong>independente do método de instalação&lt;/strong>, o usuário padrão de administrador é &lt;strong>charlesadmin@admin&lt;/strong> e a senha &lt;strong>charlesadmin.&lt;/strong>&lt;/p>
&lt;p>Logo depois de fazer o primeiro login, troque essa senha.&lt;/p>
&lt;/div>
&lt;p>Há &lt;strong>três formas de acessar a aplicação:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Minikube.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Microk8s.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Cloud provider.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Veja abaixo como funciona a configuração para cada uma delas.&lt;/p>
&lt;h2>&lt;strong>1. Minikube&lt;/strong>&lt;/h2>
&lt;p>No minikube, o &lt;strong>load balancer nginx não cria automaticamente um IP externo.&lt;/strong> Para tornar isso possível, siga os passos:&lt;/p>
&lt;p>&lt;strong>Passo 1:&lt;/strong> Execute o comando abaixo&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">minikube tunnel
// digite sua senha root, em uma nova aba do terminal e execute:
kubectl get svc -n charles
// agora o IP externo está disponível
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Passo 2:&lt;/strong> Agora que você tem um IP externo, troque o valor &amp;lt;ip-external-charles&amp;gt; pelo IP externo e adicione essa linha no seu arquivo de host do OS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">&amp;lt;IP-EXTERNAL-CHARLES&amp;gt; charles.info.example
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
Veja mais sobre como mudar &lt;a href="https://www.howtogeek.com/howto/27350/beginner-geek-how-to-edit-your-hosts-file/">&lt;strong>o host do seu sistema&lt;/strong>&lt;/a>.
&lt;/div>
&lt;p>&lt;strong>Passo 3:&lt;/strong> Por fim, digite no seu navegador &lt;strong>&lt;a href="http://charles.info.example">http://charles.info.example&lt;/a>&lt;/strong> e a aplicação estará disponível.&lt;/p>
&lt;h2>2. Microk8s&lt;/h2>
&lt;p>O Microk8s está disponível para as Plataformas do Microsoft Windows, Apple MacOS e para Linux.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Acesse o site do projeto para saber mais sobre &lt;a href="https://microk8s.io/">&lt;strong>como instalar o Microk8s&lt;/strong>&lt;/a>
&lt;/div>
&lt;p>Uma vez instalado o Microk8s, você deve habilitar os seguintes add-ons:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>DNS&lt;/strong>: Descobrimento dos serviços dentro do cluster;&lt;/li>
&lt;li>&lt;strong>Storage:&lt;/strong> Criação de volumes e persistências das PODs;&lt;/li>
&lt;li>&lt;strong>MetalLB:&lt;/strong> Acesso aos serviços expostos pelo Kubernetes. Para este add-on, você terá que escolher um range de IPs onde o Load Balancer irá atribuir para a exposição dos seus serviços.&lt;/li>
&lt;/ul>
&lt;p>Siga os passos abaixo para habilitar o Microk8s no Charles:&lt;/p>
&lt;p>&lt;strong>Passo 1:&lt;/strong> Prepare o Microk8s para receber o CharlesCD.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">microk8s enable dns storage metallb
Enabling DNS
Applying manifest
serviceaccount/coredns created
configmap/coredns created
deployment.apps/coredns created
service/kube-dns created
clusterrole.rbac.authorization.k8s.io/coredns created
clusterrolebinding.rbac.authorization.k8s.io/coredns created
Restarting kubelet
DNS is enabled
Enabling default storage class
deployment.apps/hostpath-provisioner created
storageclass.storage.k8s.io/microk8s-hostpath created
serviceaccount/microk8s-hostpath created
clusterrole.rbac.authorization.k8s.io/microk8s-hostpath created
clusterrolebinding.rbac.authorization.k8s.io/microk8s-hostpath created
Storage will be available soon
Enabling MetalLB
Enter each IP address range delimited by comma
(e.g. &amp;#39;10.64.140.43-10.64.140.49,192.168.0.105-192.168.0.111&amp;#39;):
// Nesta etapa, você pode escolher um range ou usar o sugerido, vamos utilizar
// 10.64.140.43-10.64.140.49
10.64.140.43-10.64.140.49
Applying registry manifest
namespace/metallb-system created
podsecuritypolicy.policy/speaker unchanged
serviceaccount/controller created
serviceaccount/speaker created
clusterrole.rbac.authorization.k8s.io/metallb-system:controller unchanged
clusterrole.rbac.authorization.k8s.io/metallb-system:speaker unchanged
role.rbac.authorization.k8s.io/config-watcher created
clusterrolebinding.rbac.authorization.k8s.io/metallb-system:controller unchanged
clusterrolebinding.rbac.authorization.k8s.io/metallb-system:speaker unchanged
rolebinding.rbac.authorization.k8s.io/config-watcher created
daemonset.apps/speaker created
deployment.apps/controller created
configmap/config created
MetalLB is enabled
// Com o microk8s configurado, podemos então instalar o Charles usando
// o single-file
microk8s.kubectl create namespace charles
​​microk8s.kubectl apply -n charles -f https://raw.githubusercontent.com/ZupIT/charlescd/master/install/helm-chart/single-file.yaml
// agora o IP externo está disponível
microk8s.kubectl get svc -n charles
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Passo 2:&lt;/strong> Agora que você tem um IP externo, troque o valor &lt;strong>&amp;lt;ip-external-charles&amp;gt;&lt;/strong> pelo IP externo e adicione a linha no seu arquivo de host do OS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">&amp;lt;IP-EXTERNAL-CHARLES&amp;gt; charles.info.example
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
Veja mais sobre como mudar o &lt;a href="https://www.howtogeek.com/howto/27350/beginner-geek-how-to-edit-your-hosts-file/">&lt;strong>host file&lt;/strong>&lt;/a>
&lt;/div>
&lt;p>&lt;strong>Passo 3:&lt;/strong> Digite no seu navegador &lt;strong>&lt;a href="http://charles.info.example">http://charles.info.example&lt;/a>&lt;/strong> e a aplicação estará disponível.&lt;/p>
&lt;h2>&lt;strong>3. Cloud Provider (AWS, GCP, AZURE)&lt;/strong>&lt;/h2>
&lt;p>No caso do Cloud Provider, você pode criar automaticamente o &lt;strong>IP externo para o load balancer nginx&lt;/strong> ao fazer sua instalação em um cluster de kubernetes gerenciado.&lt;/p>
&lt;p>Siga os passos quando todos os componentes estiverem prontos.&lt;/p>
&lt;p>&lt;strong>Passo 1:&lt;/strong> Obtenha o IP externo com o comando.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">kubectl get svc -n charles
// get external IP value
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Passo 2:&lt;/strong> Adicione a linha abaixo no seu arquivo de host do OS (&lt;a href="https://www.howtogeek.com/howto/27350/beginner-geek-how-to-edit-your-hosts-file/">&lt;strong>veja aqui como mudar o host&lt;/strong>&lt;/a>) caso você queira acessar do browser da sua máquina:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">&amp;lt;IP-EXTERNAL-CHARLES&amp;gt; charles.info.example
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;p>Caso queira usar essa instalação em ambientes de produção ou desenvolvimento, deverá expor a aplicação usando um DNS.&lt;/p>
&lt;p>Depois de apontar seu DNS para o IP externo, faça o clone das configurações (seja o singlefile ou os arquivos do helm) e troque todas as ocorrências de &lt;a href="http://charles.info.example">http://charles.info.example&lt;/a> para o seu novo DNS, depois execute o comando de instalação novamente.&lt;/p>
&lt;/div></description></item><item><title>Primeiros Passos: Autenticando com registry privado</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configura%C3%A7%C3%B5es-opcionais/autenticando-com-registry-privado/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configura%C3%A7%C3%B5es-opcionais/autenticando-com-registry-privado/</guid><description>
&lt;hr>
&lt;h2>Por que autenticar?&lt;/h2>
&lt;p>Em casos de registries privados, essa autenticação garantirá o sucesso na comunicação com o seu &lt;a href="../../definindo-workspace/docker-registry">&lt;strong>registry&lt;/strong>&lt;/a> quando for preciso fazer o pull das imagens durante alguma implantação.&lt;/p>
&lt;h2>Como autenticar?&lt;/h2>
&lt;p>O cluster Kubernetes utiliza o tipo &lt;strong>secret&lt;/strong> do &lt;strong>docker-registy&lt;/strong> para autenticar o registry container.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Para mais informações de como gerar esse &lt;strong>secret&lt;/strong> para ser aplicado no seu cluster, &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/">&lt;strong>acesse a documentação do Kubernetes&lt;/strong>&lt;/a>.
&lt;/div>
&lt;p>Uma vez gerado o secret, ele ter uma formatação parecida com o exemplo abaixo:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">apiVersion: v1
data:
.dockerconfigjson: &amp;lt;&amp;lt;your value&amp;gt;&amp;gt;
kind: Secret
metadata:
name: &amp;lt;&amp;lt;registry-name&amp;gt;&amp;gt;
type: kubernetes.io/dockerconfigjson
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Com o secret em mãos, você precisará aplicar essa informação no namespace onde suas aplicações serão implantados pelo Charles:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">kubectl -n your-namespace apply secret-registry.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finalizando desses passos, seu cluster conseguirá manter a comunicação com o registry.&lt;/p></description></item><item><title>Primeiros Passos: Configurando sua ingress</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configura%C3%A7%C3%B5es-opcionais/configurando-sua-ingress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configura%C3%A7%C3%B5es-opcionais/configurando-sua-ingress/</guid><description>
&lt;hr>
&lt;p>Caso você queira utilizar sua ingress, ao invés da que possui na instalação do Charles, siga o seguinte passo:&lt;/p>
&lt;ul>
&lt;li>em &lt;code>charlescd/install/helm-chart/values.yaml&lt;/code>, nas configurações de ingress, mude o valor de &lt;strong>&lt;code>enabled&lt;/code>&lt;/strong> para &lt;strong>&lt;code>true&lt;/code>&lt;/strong> como no exemplo abaixo.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">ingress:
enabled: true
host: charles.info.example
class: nginx
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Primeiros Passos: Definindo o Identity Manager</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configura%C3%A7%C3%B5es-opcionais/definindo-o-identity-manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configura%C3%A7%C3%B5es-opcionais/definindo-o-identity-manager/</guid><description>
&lt;hr>
&lt;h3>O que é Identity Manager (IDM)?&lt;/h3>
&lt;p>É o responsável por gerenciar a identidade dos usuários que acessarão uma determinada aplicação, neste caso, o Charles.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Quando o usuário acessa o Charles, é verificado qual gerenciador responsável foi configurado durante a instalação para fazer a validação da identidade do usuário.
&lt;/div>
&lt;p>No exemplo da imagem abaixo, é ilustrado um fluxo onde se faz a verificação de qual foi a configuração feita para gerenciar os usuários. Nesse caso, quando o usuário tenta acessar o Charles e ainda não está autenticado, se tiver sido configurado um IDM personalizado, como o Google, por exemplo, o usuário é redirecionado para a própria página do Google para fazer a autenticação. Caso contrário, a tela de autenticação do Charles é retornada para dar sequência ao fluxo.&lt;/p>
&lt;p>&lt;img src="//untitled-diagram-1-.png" alt="">&lt;/p>
&lt;h3>Porque configurar um IDM?&lt;/h3>
&lt;p>Para garantir a segurança dos acessos ao Charles, é necessário ter um gerenciador de identidade. Para isso, o Charles oferece duas opções:&lt;/p>
&lt;h3>IDM Padrão&lt;/h3>
&lt;p>Na instalação padrão do Charles, já existe o &lt;strong>Keycloak&lt;/strong> que é utilizado para fazer a gestão dos usuários. Portanto, se você não tem um IDM personalizado que queira utilizar, a instalação padrão te oferece esse suporte.&lt;/p>
&lt;h3>IDM Externa&lt;/h3>
&lt;p>Caso você tenha seu próprio gerenciador de identidade, é necessário alterar algumas variáveis na instalação. Para isso, siga nossas instruções na &lt;a href="../../../referencia/identity-manager">&lt;strong>referência sobre IDM&lt;/strong>&lt;/a>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;p>Há alguns fluxos bloqueados quando um IDM externo é utilizado, veja abaixo:&lt;/p>
&lt;ul>
&lt;li>Criação de usuário;&lt;/li>
&lt;li>Mudar senha;&lt;/li>
&lt;li>Reset de senha;&lt;/li>
&lt;li>Deleção de usuário.&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Primeiros Passos: Docker Registry</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/docker-registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/docker-registry/</guid><description>
&lt;hr>
&lt;div class="alert alert-warning" role="alert">
Essa informação é obrigatória.
&lt;/div>
&lt;p>Durante a configuração do seu workspace, é necessário cadastrar o registry onde as imagens das suas aplicações estão armazenadas. Esse acesso é importante, pois uma vez configurado, o CharlesCD pode &lt;strong>observar novas imagens sendo geradas e listar as imagens já salvas no seu registry&lt;/strong> para implantá-las.&lt;/p>
&lt;p>Charles já é integrado com alguns docker registries, escolha um e adicione as informações especificadas:&lt;/p></description></item><item><title>Primeiros Passos: Ambiente de deploy</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/ambiente-de-deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/ambiente-de-deploy/</guid><description>
&lt;hr>
&lt;p>Ao configurar seu workspace é preciso cadastrar as credenciais de acesso ao cluster &lt;a href="https://kubernetes.io/">&lt;strong>Kubernetes&lt;/strong>&lt;/a>. Essas configurações são específicas para cada uma das ferramentas de &lt;em>Continuous Deployment&lt;/em> (CD) que são integradas ao CharlesCD. No momento, o Charles realiza o deploy nativamente ou você pode integrar com o &lt;a href="https://www.spinnaker.io/">&lt;strong>Spinnaker&lt;/strong>&lt;/a>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
O &lt;strong>Charles&lt;/strong> possui um módulo chamado Octopipe que é uma forma leve e de baixo custo de fazer deploy em clusters Kubernetes.
&lt;/div>
&lt;h3>Como realizar seu deploy?&lt;/h3>
&lt;p>Veja abaixo o exemplo de como realizar seu deploy utilizando o CharlesCD no mesmo cluster de instalação:&lt;/p>
&lt;ol>
&lt;li>Clique em &lt;strong>Add CD Configuration&lt;/strong>;&lt;/li>
&lt;li>Selecione a opção &lt;strong>CharlesCD.&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>Após esses passos, preencha os campos a seguir:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Name:&lt;/strong> nome da configuração que será criada.&lt;/li>
&lt;li>&lt;strong>Namespace:&lt;/strong> defina o namespace que será utilizado nos deploys no cluster &lt;em>Kubernetes.&lt;/em>&lt;/li>
&lt;li>&lt;strong>Git provider&lt;/strong>: defina o provedor de git a ser utilizado (&lt;strong>GitHub ou GitLab&lt;/strong>).&lt;/li>
&lt;li>&lt;strong>Git token:&lt;/strong> insira um token de autenticação que tenha acesso repositório git onde está armazenado os seus &lt;a href="../../../criando-seu-primeiro-modulo/configurando-o-chart-template">&lt;strong>templates Helm&lt;/strong>&lt;/a> que serão utilizados durante o deployment da sua &lt;a href="../../../criando-seu-primeiro-modulo/">&lt;strong>aplicação&lt;/strong>&lt;/a>. Caso o seu Git Provider seja &lt;strong>GitHub&lt;/strong>, é necessário a permissão &amp;ldquo;&lt;em>repo&lt;/em>&amp;rdquo;. Se for o contrário, configure no &lt;strong>GitLab&lt;/strong> os acessos: &amp;ldquo;&lt;em>api&lt;/em> '' e &amp;ldquo;&lt;em>read_repository&lt;/em>&amp;rdquo;.&lt;/li>
&lt;li>Selecione a opção &lt;strong>Default&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>Depois de finalizar sua configuração, você pode futuramente associá-la a um módulo. Para mais informações, acesse &lt;a href="../../../referencia/preparando-seu-deploy">&lt;strong>Configurações de CD&lt;/strong>.&lt;/a>&lt;/p></description></item><item><title>Primeiros Passos: Circle Matcher</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/circle-matcher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/circle-matcher/</guid><description>
&lt;hr>
&lt;h2>Por que configurar?&lt;/h2>
&lt;p>Quando você &lt;a href="../../../.././">&lt;strong>cria um workspace&lt;/strong>&lt;/a>, é preciso informar ao Charles para qual Circle Matcher esse workspace atual apontará. É possível que haja um Circle Matcher para cada ambiente, já que o Charles lida, ao mesmo tempo, com diferentes ambientes em vários workspaces.&lt;/p>
&lt;p>Apesar do Circle Matcher ser um módulo independente no Charles, é possível instalá-lo em qualquer área de preferência dentro da arquitetura como, por exemplo, em um cluster público.&lt;/p>
&lt;p>Essa configuração é necessária para que você possa executar operações dentro do Charles, como criar ou editar segmentos de um círculo.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Vale lembrar que, no contexto do Charles, o módulo do Circle Matcher é o que mais recebe solicitações no ambiente por identificar os usuários com base nas regras que você configurou ao &lt;a href="../../../../../referencia/circulo#como-criar-circulos">&lt;strong>gerenciar um círculo&lt;/strong>&lt;/a>.
&lt;/div>
&lt;p>Se você deseja saber mais sobre o que é um Circle Matcher, &lt;a href="../../../../referencia/circle-matcher">&lt;strong>veja a seção Referência&lt;/strong>&lt;/a>.&lt;/p>
&lt;h2>Como deve ser configurado&lt;/h2>
&lt;h4>Opção 1: Configurar o Circle Matcher em uma arquitetura à parte&lt;/h4>
&lt;p>Você deve configurar o DNS público que aponta para o Circle Matcher desejado.&lt;/p>
&lt;blockquote>
&lt;p>Exemplo: &lt;strong>&lt;a href="http://charles.info.example/charlescd-circle-matcher">http://charles.info.example/charlescd-circle-matcher&lt;/a>&lt;/strong>.&lt;/p>
&lt;/blockquote>
&lt;h4>Opção 2: Configurar o Circle Matcher no mesmo namespace do Charles&lt;/h4>
&lt;p>Caso prefira usar o Circle Matcher no mesmo namespace em que Charles está instalado, você pode usar a mesma referência de DNS.&lt;/p>
&lt;p>A diferença é que, em termos de desempenho, o mais recomendado é usar o nome do serviço do Kubernetes.&lt;/p>
&lt;blockquote>
&lt;p>Exemplo: &lt;strong>http://charlescd-circle-matcher:8080&lt;/strong>.&lt;/p>
&lt;/blockquote>
&lt;h2>Próximos passos&lt;/h2>
&lt;p>Nesta seção, você viu como criar seu Circle Matcher. Para continuar sua configuração de um workspace, o Charles oferece métricas que precisam ser configuradas.&lt;/p>
&lt;p>👉 Vá para página &lt;a href="../../../referencia/metricas/configurando-metricas">&lt;strong>Configurando as métricas&lt;/strong>&lt;/a> e descubra como Charles utiliza as métricas.&lt;/p></description></item><item><title>Primeiros Passos: Adicionando o Datasource</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/adicionando-o-datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/adicionando-o-datasource/</guid><description>
&lt;hr>
&lt;p>Para quantificar a performance de suas aplicações e acompanhar o status delas, o Charles oferece dois tipos de DataSource: Prometheus e Google Analytics.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Antes de adicionar o Datasource, é necessário ter finalizado a &lt;a href="../../../referencia/metricas/configurando-metricas">&lt;strong>configuração de métricas&lt;/strong>&lt;/a>.
&lt;/div>
&lt;h3>Como configurar?&lt;/h3>
&lt;p>Para realizar a configuração de cadastro, basta seguir os seguintes passos:&lt;/p>
&lt;ol>
&lt;li>Clique no seu nome, no canto inferior esquerdo e, em seguida, selecione &lt;strong>Settings&lt;/strong>.&lt;/li>
&lt;li>Clique em &lt;strong>Credentials;&lt;/strong>&lt;/li>
&lt;li>Clique em &lt;strong>Add DataSource;&lt;/strong>&lt;/li>
&lt;li>Selecione a &lt;strong>opção de ferramenta&lt;/strong> que você utiliza;&lt;/li>
&lt;li>&lt;strong>Data source health:&lt;/strong> essa opção é para saber mais detalhes sobre a saúde do seu círculo.&lt;/li>
&lt;li>Faça a configuração baseada na ferramenta selecionada.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="//workspace_datasource%20%281%29.gif" alt="">&lt;/p></description></item><item><title>Primeiros Passos: Ações</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/a%C3%A7%C3%B5es/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/a%C3%A7%C3%B5es/</guid><description>
&lt;hr>
&lt;h2>O que é?&lt;/h2>
&lt;p>Depois de &lt;a href="../../../../referencia/metricas/grupo-de-metricas">&lt;strong>cadastrar seu grupo de métricas&lt;/strong>&lt;/a>, o Charles mostra o acompanhamento dessas métricas e oferece ações para cada uma delas. Ação é um tipo de trigger que será disparado quando todos os limites (thresholds) são alcançados.&lt;/p>
&lt;h2>Como configurar?&lt;/h2>
&lt;p>Em configurações do workspace, clique na seção &lt;strong>Add Metric Action&lt;/strong> e siga os passos:&lt;/p>
&lt;p>&lt;strong>1. Add action configuration&lt;/strong>: Adicione uma ação de configuração;&lt;br>
&lt;strong>2. Type a nickname:&lt;/strong> Escreva um nome para sua action;&lt;br>
&lt;strong>3. Type a description:&lt;/strong> Descreva o sua action;&lt;br>
&lt;strong>4. Select a plugin:&lt;/strong> Selecione um plugin para executar a ação.&lt;/p>
&lt;p>&lt;img src="//workspace_metricaction%20%282%29.gif" alt="">&lt;/p>
&lt;div class="alert alert-info" role="alert">
O único plugin disponível no momento é o &lt;strong>circle deployment&lt;/strong>. Ele permite que o Charles faça o seu próprio plugin para atender às necessidades da sua aplicação como, por exemplo, uma action que envie e-mail para avisar o status do círculo.
&lt;/div>
&lt;p>Para mais informações sobre &lt;strong>Action&lt;/strong>, veja a &lt;a href="../../../referencia/metricas/acoes">&lt;strong>seção de Referência&lt;/strong>&lt;/a>.&lt;/p></description></item><item><title>Primeiros Passos: Webhooks</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/webhooks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/definindo-um-workspace/webhooks/</guid><description>
&lt;hr>
&lt;h2>O que é?&lt;/h2>
&lt;p>Webhook é um recurso que observa os eventos de um sistema. Quando os eventos acontecem, o webhook tem a função de enviar uma notificação para os interessados cadastrados em receber as informações desse evento.&lt;/p>
&lt;p>O Charles possui o módulo**&lt;code>charlescd-hermes&lt;/code>**, que é responsável por identificar esses eventos e enviar aos inscritos as notificações.&lt;/p>
&lt;h3>Como cadastrar?&lt;/h3>
&lt;p>É necessário criar configurações de webhook para utilizar essa funcionalidade no Charle. Para isso, siga os passos abaixo:&lt;/p>
&lt;ol>
&lt;li>Em &lt;strong>Workspace&lt;/strong>, clique em &lt;strong>&amp;lsquo;Add Webhook&amp;rsquo;&lt;/strong>;&lt;/li>
&lt;li>Preencha os campos de:
&lt;ul>
&lt;li>&lt;strong>Descrição:&lt;/strong> adicione a descrição do webhook;&lt;/li>
&lt;li>&lt;strong>Webhook URL:&lt;/strong> coloque a URL do serviço;&lt;/li>
&lt;li>&lt;strong>Secret (Opcional):&lt;/strong> adicione, se necessário, a chave de aplicação;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Escolha o evento: &lt;strong>deploy&lt;/strong>, &lt;strong>undeploy&lt;/strong> ou &lt;strong>ambos&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>Depois do cadastro, um card aparecerá com o status de sucesso ou erro da última mensagem enviada. Veja a imagem abaixo:&lt;/p>
&lt;p>&lt;img src="//image%20%286%29.png" alt="Exemplo de mensagem de erro para solicita&amp;#xE7;&amp;#xE3;o do webhooks">&lt;/p>
&lt;p>As informações do evento são enviadas na propriedade &lt;strong>content&lt;/strong>. O seu serviço exposto precisa aceitar essa propriedade no corpo da requisição.&lt;/p>
&lt;h3>&lt;strong>Propriedade comum dos objetos do payload de webhook&lt;/strong>&lt;/h3>
&lt;p>Cada payload de evento possui propriedades únicas. Você pode encontrá-las nas seções individuais de eventos. Abaixo estão as propriedades comuns:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Key&lt;/th>
&lt;th style="text-align:left">Tipo&lt;/th>
&lt;th style="text-align:left">Descrição&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">subscriptionId&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">O id da subscrição do Webhook.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">subscriptionId&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">O id da subscrição do Webhook.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">executionId&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">O id de execução do evento. Permite rastrear todo ciclo de vida da notificação.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">event&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Detalhes do evento.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>Eventos&lt;/h2>
&lt;p>Os eventos observáveis são &lt;strong>início&lt;/strong> e &lt;strong>finalização&lt;/strong> de &lt;strong>deploy&lt;/strong> e &lt;strong>undeploy.&lt;/strong>&lt;/p>
&lt;h3>Deploy&lt;/h3>
&lt;p>Quando você cadastra um webhook para receber informações sobre eventos de &lt;strong>deploy&lt;/strong> de um determinado workspace, ou quando um deploy for iniciado e finalizado automaticamente, você irá receber uma notificação com detalhes do evento.&lt;/p>
&lt;p>Quando o evento é disparado, um payload HTTP POST é enviado a URL do webhook cadastrado.&lt;/p>
&lt;p>Veja abaixo:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Key&lt;/th>
&lt;th style="text-align:left">Tipo&lt;/th>
&lt;th style="text-align:left">Descrição&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">type&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Tipo do evento. Os valores possíveis são &lt;em>START_DEPLOY e FINISH_DEPLOY&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">status&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Status do evento. Os valores possíveis são &lt;em>SUCCESS&lt;/em> e &lt;em>ERROR&lt;/em>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">date&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Data de execução do evento.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">timeExecution&lt;/td>
&lt;td style="text-align:left">Long&lt;/td>
&lt;td style="text-align:left">Tempo de execução do evento.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">worspaceId&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Id do workspace.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">author&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Informações do autor do evento.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">circle&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Informações do círculo do deploy/undeploy.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">release&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Informações do deploy/undeploy.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">features&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Informações das features do deploy/undeploy.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">error&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Mensagem de erro em caso de status com erro.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Exemplo de payload do evento &lt;strong>de Deploy&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">{
&amp;#34;content&amp;#34;: &amp;#34;{
&amp;#34;subscriptionId&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;executionId&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;event&amp;#34;: {
&amp;#34;type&amp;#34;: &amp;#34;FINISH_DEPLOY&amp;#34;,
&amp;#34;status&amp;#34;: &amp;#34;FAIL&amp;#34;,
&amp;#34;error&amp;#34;: &amp;#34;Failed to pull image nexus.mydomain.co.uk/nginx Error: image nginx:latest not found&amp;#34;,
&amp;#34;date&amp;#34;: &amp;#34;2020-01-10 22:00:00&amp;#34;,
&amp;#34;workspaceId&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;author&amp;#34;: {
&amp;#34;email&amp;#34;: &amp;#34;charlescd@zup.com.br&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;CharlesCD&amp;#34;
},
&amp;#34;circle&amp;#34;: {
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;circle-qas&amp;#34;
},
&amp;#34;release&amp;#34;: {
&amp;#34;tag&amp;#34;: &amp;#34;tag&amp;#34;,
&amp;#34;modules&amp;#34;: [{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;ZupIt/charlescd&amp;#34;,
&amp;#34;componentes&amp;#34;: [{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;charlescd-moove&amp;#34;
},
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130004&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;charlescd-villager&amp;#34;
}
]
},
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130004&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;ZupIt/horusec&amp;#34;,
&amp;#34;componentes&amp;#34;: [{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130005&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;horusec-account&amp;#34;
},
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130006&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;horusec-analytics&amp;#34;
}
]
}
],
&amp;#34;features&amp;#34;: [{
&amp;#34;name&amp;#34;: &amp;#34;new-moove-feature&amp;#34;,
&amp;#34;branchName&amp;#34;: &amp;#34;feature/moove-feature&amp;#34;
},
{
&amp;#34;name&amp;#34;: &amp;#34;new-horusec-feature&amp;#34;,
&amp;#34;branchName&amp;#34;: &amp;#34;feature/horusec-feature&amp;#34;
}
]
}
}
}&amp;#34;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3>Undeploy&lt;/h3>
&lt;p>Quando você cadastra um webhook para receber informações sobre eventos de &lt;strong>undeploy,&lt;/strong> de um determinado workspace, quando um undeploy for iniciado e finalizado automaticamente você irá receber uma notificação com detalhes do evento.&lt;/p>
&lt;p>Quando o evento é disparado, um payload HTTP POST é enviado a URL do webhook cadastrado, veja abaixo:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Key&lt;/th>
&lt;th style="text-align:left">Tipo&lt;/th>
&lt;th style="text-align:left">Descrição&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">type&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Tipo do evento. Os valores possíveis são &lt;em>START_UNDEPLOY e FINISH_UNDEPLOY&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">status&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Status do evento. Os valores possíveis são &lt;em>SUCCESS&lt;/em> e &lt;em>ERROR&lt;/em>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">date&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Data de execução do evento.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">worspaceId&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Id do workspace.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">author&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Informações do autor do evento.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">circle&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Informações do círculo do deploy/undeploy.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">release&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Informações do deploy/undeploy.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">features&lt;/td>
&lt;td style="text-align:left">Object&lt;/td>
&lt;td style="text-align:left">Informações das features do deploy/undeploy.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">error&lt;/td>
&lt;td style="text-align:left">String&lt;/td>
&lt;td style="text-align:left">Mensagem de erro em caso de status com erro.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Exemplo de payload do evento &lt;strong>de Undeploy&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">&amp;#34;content&amp;#34;: &amp;#34;{
&amp;#34;subscriptionId&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;executionId&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;event&amp;#34;: {
&amp;#34;type&amp;#34;: &amp;#34;START_UNDEPLOY&amp;#34;,
&amp;#34;status&amp;#34;: &amp;#34;SUCCESS&amp;#34;,
&amp;#34;date&amp;#34;: &amp;#34;2020-01-10 22:00:00&amp;#34;,
&amp;#34;workspaceId&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;author&amp;#34;: {
&amp;#34;email&amp;#34;: &amp;#34;charlescd@zup.com.br&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;CharlesCd&amp;#34;
},
&amp;#34;circle&amp;#34;: {
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;circle-qas&amp;#34;
},
&amp;#34;release&amp;#34;: {
&amp;#34;tag&amp;#34;: &amp;#34;tag&amp;#34;,
&amp;#34;modules&amp;#34;: [
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;ZupIt/charlescd&amp;#34;,
&amp;#34;componentes&amp;#34;: [
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130003&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;charlescd-moove&amp;#34;
},
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130004&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;charlescd-villager&amp;#34;
}
]
},
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130004&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;ZupIt/horusec&amp;#34;,
&amp;#34;componentes&amp;#34;: [
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130005&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;horusec-account&amp;#34;
},
{
&amp;#34;id&amp;#34;: &amp;#34;5d4c95b4-6f83-11ea-bc55-0242ac130006&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;horusec-analytics&amp;#34;
}
]
}
],
&amp;#34;features&amp;#34;: [
{
&amp;#34;name&amp;#34;: &amp;#34;new-moove-feature&amp;#34;,
&amp;#34;branchName&amp;#34;: &amp;#34;feature/moove-feature&amp;#34;
},
{
&amp;#34;name&amp;#34;: &amp;#34;new-horusec-feature&amp;#34;,
&amp;#34;branchName&amp;#34;: &amp;#34;feature/horusec-feature&amp;#34;
}
]
}
}
}&amp;#34;
}
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Primeiros Passos: Configurando o chart template</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/criando-seu-primeiro-m%C3%B3dulo/configurando-o-chart-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/criando-seu-primeiro-m%C3%B3dulo/configurando-o-chart-template/</guid><description>
&lt;hr>
&lt;h2>&lt;strong>O que é o Helm?&lt;/strong>&lt;/h2>
&lt;p>O Helm Charts é um gerenciador de pacotes que permite você definir, instalar e atualizar as aplicações no Kubernetes, independente do grau de complexidade.&lt;/p>
&lt;p>No contexto do Charles, o &lt;a href="https://helm.sh/docs/chart_template_guide/getting_started/">&lt;strong>Chart Template&lt;/strong>&lt;/a> é usado como uma coleção de arquivos relacionados a configurações do Kubernetes.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Se você não tiver configurado o &lt;strong>seu módulo,&lt;/strong> &lt;a href=".././">&lt;strong>acesse aqui&lt;/strong>&lt;/a>. É importante lembrar que você deve cadastrar a URL no módulo.
&lt;/div>
&lt;h2>Como configurar o chart template?&lt;/h2>
&lt;p>Siga os próximos passos para configurar o app de exemplo.&lt;/p>
&lt;h3>&lt;strong>Passo 1: Crie um diretório do chart template&lt;/strong>&lt;/h3>
&lt;p>Para começar, você precisa salvar os seus templates em uma ferramenta de versionamento da sua preferência. Assim que criar um novo chart template, você precisa dar ao diretório o mesmo nome do componente ao qual ele se refere&lt;/p>
&lt;p>A estrutura abaixo contém os templates necessários para se fazer o deploy de um módulo que possui um componente chamado “circles-sample”.&lt;/p>
&lt;p>A imagem demonstra como seu diretório deve ficar:&lt;/p>
&lt;p>&lt;img src="//screen-shot-2020-08-13-at-09.16.04.png" alt=" Diret&amp;#xF3;rio de chart template do circle-sample">&lt;/p>
&lt;h3>Passo 2: Configure os itens do diretório&lt;/h3>
&lt;p>Depois de criado o diretório, você deve configurá-lo. Veja quais arquivos são necessários para seguir com essa configuração:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>templates/ :&lt;/strong> contém nossos modelos.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>deployment.yaml:&lt;/strong> descreve a estrutura de &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/">&lt;strong>deployment&lt;/strong>&lt;/a>.&lt;/li>
&lt;li>&lt;strong>service.yaml:&lt;/strong> descreve a estrutura do &lt;a href="https://kubernetes.io/docs/concepts/services-networking/service/">&lt;strong>service&lt;/strong>&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>O arquivo &lt;strong>Chart.yaml&lt;/strong> contém uma descrições como version, name, description. É necessário definir a version como &amp;ldquo;darwin&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>O arquivo &lt;strong>circles-sample.yaml&lt;/strong> possui os valores que serão utilizados nos nossos templates.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Essas são as informações que o Charles precisa ter no templates. Vale ressaltar que você pode incrementar esses templates da forma como você preferir.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;p>Com o seu diretório configurado de acordo com a estrutura acima, vá até a pasta &amp;ldquo;circles-sample&amp;rdquo; e execute o comando &lt;strong>&amp;quot;&lt;code>helm package .&lt;/code>&amp;quot;&lt;/strong>.&lt;/p>
&lt;p>Ao final desse comando, você terá uma arquivo &lt;strong>tgz&lt;/strong> com o nome de circles-samples-darwin. Nossa ferramenta de CD procura esse &lt;strong>tgz&lt;/strong> para executar o template&lt;/p>
&lt;/div></description></item><item><title>Primeiros Passos: Configurando seus módulos para propagar o id do círculo</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/criando-seu-primeiro-m%C3%B3dulo/configurando-seus-m%C3%B3dulos-para-propagar-o-id-do-c%C3%ADrculo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/criando-seu-primeiro-m%C3%B3dulo/configurando-seus-m%C3%B3dulos-para-propagar-o-id-do-c%C3%ADrculo/</guid><description>
&lt;hr>
&lt;h2>Por que configurar?&lt;/h2>
&lt;p>Quando você trabalha em cenários com vários microsserviços, configurar os módulos é uma forma de garantir a propagação de header &lt;code>x-circle-id&lt;/code> e com isso certificar o &lt;a href="../../../../referencia/circulo#como-integrar-circulos-com-servicos">&lt;strong>roteamento dos usuários para as versões corretas&lt;/strong>&lt;/a>. Dessa forma, você torna possível que o usuário da sua base chegue na mesma versão de todos os microserviços que fazem parte do seu teste de hipótese.&lt;/p>
&lt;p>Por exemplo, se você testar uma feature entre microserviços que tenham integrações em um fluxo de abertura de conta, é necessário garantir que o usuário será redirecionado a todas as versões corretas que estão no teste de hipóteses, criado para esse fluxo.&lt;/p>
&lt;p>Para garantir isso, você pode utilizar uma biblioteca de propagação do header &lt;code>x-circle-id&lt;/code>, que faz com que o &lt;a href="../../../referencia/circle-matcher#identificacao-de-circulos-atraves-da-api">&lt;strong>id do círculo identificado pelo &lt;code>circle-matcher&lt;/code>&lt;/strong>&lt;/a>seja repassado entre todas as requisições dentro da malha de microserviço, garantindo assim, que os usuários sejam redirecionados para a versão correta do seu teste de hipótese.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Caso exista um microserviço dentro do fluxo que não faz parte do seu teste, o valor do círculo será repassado, mas a sua requisição cairá em mar aberto, porque não há nenhuma versão destinada para aquele círculo.
&lt;/div>
&lt;h3>&lt;strong>Exemplo&lt;/strong>&lt;/h3>
&lt;p>Veja o workflow abaixo que mostra como a configuração funciona:&lt;/p>
&lt;p>&lt;img src="//header-propagation-ptbr-v2.png" alt="">&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>Ao realizar a chamada de um microserviço, o id do círculo que o usuário pertence é obtido por meio do módulo &lt;code>circle-matcher&lt;/code>.&lt;/li>
&lt;li>O id é inserido no header de todas as próximas requisições com a chave &lt;strong>&lt;code>X-Circle-Id&lt;/code>&lt;/strong>.&lt;/li>
&lt;li>A biblioteca de propagação possibilita repassar o &lt;strong>&lt;code>x-circle-id&lt;/code>&lt;/strong> no header para a chamada de um outro microserviço, no caso o &lt;strong>&lt;code>butler&lt;/code>.&lt;/strong>&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>No Charles quando acontece um teste de hipótese no &lt;code>butler&lt;/code>, por exemplo, ele está integrado com o &lt;code>moove&lt;/code>que é o microserviço que atende as requisições do frontend.&lt;/p>
&lt;p>Se você quiser que sua requisição chegue na versão correta do &lt;code>butler&lt;/code>, é preciso que o &lt;strong>&lt;code>moove&lt;/code>&lt;/strong> repasse o header &lt;strong>&lt;code>X-Circle-Id&lt;/code>&lt;/strong> (obtido por meio de uma requisição para o &lt;code>circle-matcher&lt;/code>) nessas requisições feitas para ele. E se envolver mais de um &lt;strong>microserviço,&lt;/strong> é preciso propagar o header para garantir que o usuário tenha a mesma versão daquele círculo.&lt;/p>
&lt;p>Quando acontece um teste no &lt;code>moove&lt;/code> e se ele estiver integrado com o &lt;code>villager&lt;/code> e o &lt;code>butler&lt;/code>, a propagação do header &lt;code>X-Circle-Id&lt;/code> faz com que você procure por versões do &lt;code>villager&lt;/code> e do &lt;code>butler&lt;/code> na mesma versão do &lt;code>moove&lt;/code>, porém como esse não é o cenário, essas requisições entre o &lt;code>moove&lt;/code> e suas integrações serão tratadas pelo mar aberto.&lt;/p>
&lt;h2>Como adicionar?&lt;/h2>
&lt;p>O Charles possui uma biblioteca (lib) que funciona para qualquer aplicação &lt;strong>Java&lt;/strong> que utilize o &lt;strong>Spring&lt;/strong> como framework e outra para &lt;strong>.NET Core.&lt;/strong> As libs foram construídas por não existir nenhuma alternativa amplamente utilizada para esse cenário.&lt;/p>
&lt;p>Para usá-las, você precisa adicioná-las a sua aplicação:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ZupIT/charlescd/tree/master/tracing/spring">&lt;strong>Lib para Java e Spring&lt;/strong> &lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ZupIT/charlescd/tree/master/tracing/dotnet-core%20">&lt;strong>Lib para .NET&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
O &lt;strong>Node.js&lt;/strong> já possui uma lib, &lt;a href="https://www.npmjs.com/package/hpropagate">&lt;strong>veja na página do npm&lt;/strong>&lt;/a>.
&lt;/div></description></item><item><title>Primeiros Passos: Primeiro Deploy</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/primeiro-deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/primeiro-deploy/</guid><description>
&lt;hr>
&lt;div class="alert alert-info" role="alert">
Após criar o seu primeiro &lt;a href="criando-seu-primeiro-modulo/">&lt;strong>módulo&lt;/strong> &lt;/a>e cadastrar as &lt;a href="definindo-workspace/ambiente-de-deploy">&lt;strong>credenciais do seu cluster&lt;/strong>,&lt;/a> você completou todos os passos de configuração necessários para a realização do seu primeiro deploy. Agora, é necessário criar uma &lt;a href="../../../../../referencia/release">&lt;strong>release&lt;/strong>&lt;/a> e disponibilizá-la no cluster configurado.
&lt;/div>
&lt;h3>Como fazer o primeiro deploy?&lt;/h3>
&lt;p>No CharlesCD, é preciso utilizar imagens de containers já disponíveis no &lt;a href="definindo-workspace/docker-registry">&lt;strong>registry&lt;/strong> &lt;/a>configurado para criar uma release.&lt;/p>
&lt;p>Para fazer seu primeiro deploy, siga os passos abaixo:&lt;/p>
&lt;ol>
&lt;li>Acesse a área &amp;ldquo;&lt;strong>Círculos&lt;/strong>&amp;rdquo; &lt;strong>(Circles)&lt;/strong>;&lt;/li>
&lt;li>Selecione um &lt;a href="../../../referencia/circulo">&lt;strong>círculo&lt;/strong>&lt;/a>. Caso você não tenha criado um ainda, a opção que irá aparecer é a do &lt;strong>círculo default&lt;/strong> para que seja possível você realizar o primeiro deploy;&lt;/li>
&lt;li>Altere o filtro do círculo de ativo para &lt;strong>inativo;&lt;/strong>&lt;/li>
&lt;li>Selecione a opção &amp;ldquo;&lt;strong>Insert a release&lt;/strong>&amp;quot;;&lt;/li>
&lt;li>Depois selecione &amp;ldquo;&lt;strong>Create a release&lt;/strong>&amp;rdquo; e preencha os campos:
&lt;ol>
&lt;li>&lt;strong>&amp;lsquo;Release name&amp;rsquo;:&lt;/strong> escolha um nome para a sua release;&lt;/li>
&lt;li>&lt;strong>&amp;lsquo;Select a module&amp;rsquo;:&lt;/strong> selecione um módulo;&lt;/li>
&lt;li>&lt;strong>&amp;lsquo;Select a component&amp;rsquo;:&lt;/strong> selecione um componente;&lt;/li>
&lt;li>&amp;lsquo;&lt;strong>Version name&lt;/strong>': digite o nome da tag (é necessário ser o mesmo nome que aparece cadastrado em seu Registry).&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>5 . Clique no botão &amp;ldquo;&lt;strong>Deploy&lt;/strong>&amp;rdquo; e aguarde o status no card verde. Enquanto estiver em processo, irá aparecer &amp;ldquo;&lt;strong>deploying&lt;/strong>&amp;rdquo;, mas ao final irá aparecer &amp;ldquo;&lt;strong>deployed&lt;/strong>&amp;rdquo;.&lt;/p>
&lt;div class="alert alert-success" role="alert">
Depois que você realizou o processo acima, sua release está pronta para o deploy!
&lt;/div>
&lt;h3>Deploy em mar aberto&lt;/h3>
&lt;p>O &lt;strong>deploy em&lt;/strong> &lt;a href="../../principais-conceitos#mar-aberto-default">&lt;strong>mar aberto&lt;/strong>&lt;/a> é aquele em que você envia sua aplicação para toda segmentação cadastrada no Charles.&lt;/p>
&lt;p>Para realizar o deploy neste caso, siga os passos abaixo:&lt;a href="../principais-conceitos#mar-aberto-default"> &lt;/a>&lt;/p>
&lt;ol>
&lt;li>Na tela inicial do Charles, clique em &lt;strong>Circles&lt;/strong>;&lt;/li>
&lt;li>Clique no círculo &lt;strong>Default&lt;/strong> (Este representa o mar aberto);&lt;/li>
&lt;li>Clique em &lt;strong>Override release&lt;/strong> no canto direito superior;&lt;/li>
&lt;li>Clique em &lt;strong>Search for ready releases&lt;/strong>;&lt;/li>
&lt;li>Digite o nome da release criada nos passos acima (ou os reproduza novamente com uma nova versão), a selecione e clique em &lt;strong>Deploy.&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>Depois disso, o Charles se encarregará de disponibilizar a release criada no cluster configurado em mar aberto. O status do deploy será exibido e atualizado conforme o progresso.&lt;/p>
&lt;p>&lt;img src="//first-deploy.gif" alt="">&lt;/p></description></item><item><title>Primeiros Passos: Usando Círculos</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/usando-c%C3%ADrculos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/usando-c%C3%ADrculos/</guid><description>
&lt;hr>
&lt;p>A partir do momento em que você começa a fazer seus deploys, o próximo passo é &lt;a href="../../../../../../../referencia/circulo#como-criar-circulos">&lt;strong>criar os primeiros círculos&lt;/strong> &lt;/a>para melhor segmentação das suas aplicações.&lt;/p>
&lt;p>Para isso, siga os seguintes passos:&lt;/p>
&lt;div class="alert alert-info" role="alert">
Certifique-se de que você já tenha instalado e configurado o &lt;a href="../../../../../referencia/circle-matcher">&lt;strong>Circle Matcher&lt;/strong> &lt;/a>no &lt;a href="definindo-workspace/">&lt;strong>workspace&lt;/strong> &lt;/a>antes de iniciar os passos abaixo.
&lt;/div>
&lt;ol>
&lt;li>&lt;a href="../referencia/circulo#como-criar-circulos">&lt;strong>Crie seu círculo.&lt;/strong>&lt;/a>&lt;/li>
&lt;li>Utilize &lt;a href="../referencia/circle-matcher">&lt;strong>Circle Matcher&lt;/strong>&lt;/a> para verificar se as regras lógicas criadas para as segmentações estão identificando corretamente os usuários.&lt;/li>
&lt;li>Faça o deploy no círculo criado.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="//first-deploy%20%282%29.gif" alt="">&lt;/p></description></item><item><title>Primeiros Passos: Configurando o Charles no seu pipeline</title><link>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configurando-o-charles-no-seu-pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.charlescd.io/v1.0.x/pt/primeiros-passos/configurando-o-charles-no-seu-pipeline/</guid><description>
&lt;hr>
&lt;h2>Por que integrar o Charles ao seu pipeline de Continuous Delivery?&lt;/h2>
&lt;p>Integrações são capazes de garantir mais velocidade ao seu time. A entrega contínua (CD) permite que você pegue o código armazenado no repositório e o entregue à produção (ou em qualquer outro ambiente) continuamente.&lt;/p>
&lt;p>A configuração de um CD gera um processo mais rápido e eficaz para colocar seu produto no mercado antes da concorrência, e isso permite que seu time crie novos recursos e correções de bugs para manter seus clientes satisfeitos.&lt;/p>
&lt;h2>Pré-requisitos&lt;/h2>
&lt;p>Para integrar o Charles C.D. no seu pipeline, você precisa saber algumas informações. Veja abaixo quais são e como consegui-las:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>x-charles-token&lt;/code>&lt;/strong>: É um hash criado quando um &lt;strong>token sistêmico&lt;/strong> é gerado. Caso tenha perdido o valor, é possível regerar essa informação. &lt;strong>Veja mais detalhes na seção do token sistêmico&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>&lt;code>x-workspace-id&lt;/code>&lt;/strong>: Esse Id representa o workspace onde suas configurações de ambiente e círculos estão. &lt;a href="definindo-workspace/#como-obter-o-identificador-do-meu-workspace">&lt;strong>Copie o ID no menu existente ao visualizar o workspace&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>&lt;code>module.id&lt;/code>&lt;/strong>: Esse Id representa o projeto cadastrado no Charles.&lt;a href="criando-seu-primeiro-modulo/#como-obter-o-identificador-do-meu-modulo"> &lt;strong>Copie o ID no menu existente ao visualizar o módulo.&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>&lt;code>component.id&lt;/code>&lt;/strong>: Esse identificador representa o componente e &lt;a href="criando-seu-primeiro-modulo/#como-obter-o-identificador-dos-componentes">&lt;strong>pode ser buscado nos detalhes do módulo&lt;/strong>&lt;/a>.&lt;/li>
&lt;li>&lt;strong>&lt;code>component.version&lt;/code>&lt;/strong>: Neste campo informe o nome da tag da imagem do seu componente.&lt;/li>
&lt;li>&lt;strong>&lt;code>component.artifact&lt;/code>&lt;/strong>: Este é o nome do artefato. Por exemplo: {YOUR-REGISTRY-URL}-{YOUR-IMAGE-NAME}:{YOUR-TAG-NAME}.&lt;/li>
&lt;li>&lt;strong>&lt;code>circle.id&lt;/code>&lt;/strong>: Esse Id representa o círculo cadastrado no Charles.&lt;a href="../referencia/circulo#como-obter-o-identificador-do-meu-circulo-1"> &lt;strong>Copie o ID no menu existente ao visualizar o círculo.&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>&lt;code>build.id&lt;/code>&lt;/strong>: Este Id representa a composição do deploy criada na primeira requisição&lt;a href="configurando-o-charles-no-seu-pipeline#criar-composicao-do-deploy"> &lt;strong>citada abaixo&lt;/strong>&lt;/a>. Esta informação é retornada como valor da chave &lt;code>id&lt;/code> na resposta em formato de JSON.&lt;/li>
&lt;/ul>
&lt;h2>Como integrar?&lt;/h2>
&lt;p>Você pode fazer essa integração utilizando um &lt;strong>token sistêmico&lt;/strong> e uma sequência de requisições HTTPS. Veja como nos dois passos abaixo:&lt;/p>
&lt;p>{% api-method method=&amp;ldquo;post&amp;rdquo; host=&amp;ldquo;&lt;a href="https://charles.info.example">https://charles.info.example&lt;/a>&amp;rdquo; path=&amp;quot;/moove/v2/builds/compose&amp;quot; %}}
{% api-method-summary %}}
Passo 1: Criar composição do deploy
{% endapi-method-summary %}}&lt;/p>
&lt;p>{% api-method-description %}}
Esta requisição cria uma composição que representará sua release em um círculo. E você pode misturar versões diferentes com vários componentes.
{% endapi-method-description %}}&lt;/p>
&lt;p>{% api-method-spec %}}
{% api-method-request %}}
{% api-method-headers %}}
{% api-method-parameter name=&amp;ldquo;x-charles-token&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=false %}}
Token sistêmico.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;x-workspace-id&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Identificador do workspace.
{% endapi-method-parameter %}}
{% endapi-method-headers %}}&lt;/p>
&lt;p>{% api-method-body-parameters %}}
{% api-method-parameter name=&amp;ldquo;releaseName&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Nome escolhido para a release.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;modules&amp;rdquo; type=&amp;ldquo;array&amp;rdquo; required=true %}}
Lista de módulos.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;module&amp;rdquo; type=&amp;ldquo;object&amp;rdquo; required=true %}}
Objeto que representa o módulo.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;module.id&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Identificador do Módulo
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;module.components&amp;rdquo; type=&amp;ldquo;array&amp;rdquo; required=true %}}
Lista dos componentes que irão compor o deploy.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;component&amp;rdquo; type=&amp;ldquo;object&amp;rdquo; required=true %}}
Componente do módulo.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;component.id&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Identificador do component.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;component.version&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Nome da tag da imagem.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;component.artifact&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Nome do artefato. Por exemplo: {YOUR-REGISTRY-URL}-{YOUR-IMAGE-NAME}:{YOUR-TAG-NAME}
{% endapi-method-parameter %}}
{% endapi-method-body-parameters %}}
{% endapi-method-request %}}&lt;/p>
&lt;p>{% api-method-response %}}
{% api-method-response-example httpCode=201 %}}
{% api-method-response-example-description %}}&lt;/p>
&lt;p>{% endapi-method-response-example-description %}}&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;id&amp;quot;:&amp;quot;0000053e-14cc-4bae-85df-364a70eb0000&amp;quot;,
&amp;quot;author&amp;quot;:{
&amp;quot;id&amp;quot;:&amp;quot;00000afe-aa7a-4536-be1b-34eaad4c0000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;Charles Admin&amp;quot;,
&amp;quot;email&amp;quot;:&amp;quot;admin@email.com&amp;quot;
},
&amp;quot;createdAt&amp;quot;:&amp;quot;2021-04-19 12:08:54&amp;quot;,
&amp;quot;features&amp;quot;:[
{
&amp;quot;id&amp;quot;:&amp;quot;17c28af1-d7bf-4c8c-9895-ab4944fb5a9e&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;release-test-0.1&amp;quot;,
&amp;quot;branchName&amp;quot;:&amp;quot;release-test-0.1&amp;quot;,
&amp;quot;authorId&amp;quot;:&amp;quot;00000afe-aa7a-4536-be1b-34eaad4c0000&amp;quot;,
&amp;quot;authorName&amp;quot;:&amp;quot;Charles Admin&amp;quot;,
&amp;quot;modules&amp;quot;:[
{
&amp;quot;id&amp;quot;:&amp;quot;00000df6-6c34-4410-9bea-77ee56900000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;ZupIT/charlescd&amp;quot;,
&amp;quot;gitRepositoryAddress&amp;quot;:&amp;quot;https://github.com/zupit/charlescd&amp;quot;,
&amp;quot;helmRepository&amp;quot;:&amp;quot;{HELM_URL}&amp;quot;,
&amp;quot;createdAt&amp;quot;:&amp;quot;2020-11-20 13:11:31&amp;quot;,
&amp;quot;components&amp;quot;:[
{
&amp;quot;id&amp;quot;:&amp;quot;00000143-8208-4f95-9986-10b909c00000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;charlescd-ui&amp;quot;,
},
{
&amp;quot;id&amp;quot;:&amp;quot;000009ea-ada9-40fd-bddf-51c921200000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;charlescd-moove&amp;quot;
}
]
}
],
&amp;quot;createdAt&amp;quot;:&amp;quot;2021-04-19 12:08:54&amp;quot;,
&amp;quot;branches&amp;quot;:[
&amp;quot;https://github.com/zupit/charlescd/tree/release-test-0.1&amp;quot;
]
}
],
&amp;quot;tag&amp;quot;:&amp;quot;release-test-0.1&amp;quot;,
&amp;quot;status&amp;quot;:&amp;quot;BUILT&amp;quot;,
&amp;quot;deployments&amp;quot;:[]
}
&lt;/code>&lt;/pre>&lt;p>{% endapi-method-response-example %}}
{% endapi-method-response %}}
{% endapi-method-spec %}}
{% endapi-method %}}&lt;/p>
&lt;p>Veja abaixo um exemplo da requisição no formato &lt;strong>CURL&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">curl &amp;#39;https://charlescd.api.com/moove/v2/builds/compose&amp;#39; \
-H &amp;#39;x-workspace-id: 000009c4-9f58-4236-9936-ffcb04b00000&amp;#39; \
-H &amp;#39;x-charles-token: {YOUR_SYSTEM_TOKEN}&amp;#39; \
-H &amp;#39;content-type: application/json&amp;#39; \
--data-binary &amp;#39;{
&amp;#34;modules&amp;#34;:[
{
&amp;#34;id&amp;#34;:&amp;#34;00000f6-6c34-4410-9bea-77ee56900000&amp;#34;,
&amp;#34;components&amp;#34;:[
{
&amp;#34;id&amp;#34;:&amp;#34;000009ea-ada9-40fd-bddf-51c921200000&amp;#34;,
&amp;#34;version&amp;#34;:&amp;#34;{YOUR-TAG-NAME}&amp;#34;,
&amp;#34;artifact&amp;#34;:&amp;#34;{YOUR-REGISTRY-URL}-{YOUR-IMAGE-NAME}:{YOUR-TAG-NAME}&amp;#34;
},
{
&amp;#34;id&amp;#34;:&amp;#34;00000143-8208-4f95-9986-10b909c00000&amp;#34;,
&amp;#34;version&amp;#34;:&amp;#34;{YOUR-TAG-NAME}&amp;#34;,
&amp;#34;artifact&amp;#34;:&amp;#34;{YOUR-REGISTRY-URL}-{YOUR-IMAGE-NAME}:{YOUR-TAG-NAME}&amp;#34;
}
]
}
],
&amp;#34;releaseName&amp;#34;:&amp;#34;release-test-0.1&amp;#34;
}&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>{% api-method method=&amp;ldquo;post&amp;rdquo; host=&amp;ldquo;&lt;a href="https://charles.info.example">https://charles.info.example&lt;/a>&amp;rdquo; path=&amp;quot;/moove/v2/deployments&amp;quot; %}}
{% api-method-summary %}}
Passo 2: Implantar a release criada na requisição anterior em um círculo.
{% endapi-method-summary %}}&lt;/p>
&lt;p>{% api-method-description %}}
Esta requisição implanta a release composta criada anteriormente em um círculo.
{% endapi-method-description %}}&lt;/p>
&lt;p>{% api-method-spec %}}
{% api-method-request %}}
{% api-method-headers %}}
{% api-method-parameter name=&amp;ldquo;x-workspace-id&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Identificador do workspace.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;x-charles-token&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Token sistêmico.
{% endapi-method-parameter %}}
{% endapi-method-headers %}}&lt;/p>
&lt;p>{% api-method-body-parameters %}}
{% api-method-parameter name=&amp;ldquo;circleId&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Identificador do círculo que receberá o deployment.
{% endapi-method-parameter %}}&lt;/p>
&lt;p>{% api-method-parameter name=&amp;ldquo;buildId&amp;rdquo; type=&amp;ldquo;string&amp;rdquo; required=true %}}
Identificador do build criado na requisição anterior.
{% endapi-method-parameter %}}
{% endapi-method-body-parameters %}}
{% endapi-method-request %}}&lt;/p>
&lt;p>{% api-method-response %}}
{% api-method-response-example httpCode=201 %}}
{% api-method-response-example-description %}}&lt;/p>
&lt;p>{% endapi-method-response-example-description %}}&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;id&amp;quot;:&amp;quot;0000070c-1ed8-4d33-ad91-04ea50100000&amp;quot;,
&amp;quot;author&amp;quot;:{
&amp;quot;id&amp;quot;:&amp;quot;00000afe-aa7a-4536-be1b-34eaad400000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;Charles Admin&amp;quot;,
&amp;quot;email&amp;quot;:&amp;quot;admin@email.com&amp;quot;
},
&amp;quot;createdAt&amp;quot;:&amp;quot;2021-04-19 12:08:54&amp;quot;,
&amp;quot;deployedAt&amp;quot;:null,
&amp;quot;circle&amp;quot;:{
&amp;quot;id&amp;quot;:&amp;quot;000006b3-6e04-4c48-aca9-c9297e100000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;Circle name&amp;quot;,
&amp;quot;author&amp;quot;:{
&amp;quot;id&amp;quot;:&amp;quot;00000afe-aa7a-4536-be1b-34eaad400000&amp;quot;,
&amp;quot;name&amp;quot;:&amp;quot;Charles Admin&amp;quot;,
&amp;quot;email&amp;quot;:&amp;quot;admin@email.com&amp;quot;
},
&amp;quot;createdAt&amp;quot;:&amp;quot;2021-04-15 17:25:56&amp;quot;,
&amp;quot;matcherType&amp;quot;:&amp;quot;REGULAR&amp;quot;,
&amp;quot;rules&amp;quot;:{
&amp;quot;type&amp;quot;:&amp;quot;CLAUSE&amp;quot;,
&amp;quot;clauses&amp;quot;:[
{
&amp;quot;type&amp;quot;:&amp;quot;RULE&amp;quot;,
&amp;quot;content&amp;quot;:{
&amp;quot;key&amp;quot;:&amp;quot;email&amp;quot;,
&amp;quot;value&amp;quot;:[
&amp;quot;test&amp;quot;
],
&amp;quot;condition&amp;quot;:&amp;quot;EQUAL&amp;quot;
}
}
],
&amp;quot;logicalOperator&amp;quot;:&amp;quot;OR&amp;quot;
},
&amp;quot;importedAt&amp;quot;:null,
&amp;quot;importedKvRecords&amp;quot;:0
},
&amp;quot;buildId&amp;quot;:&amp;quot;0000053e-14cc-4bae-85df-364a70e00000&amp;quot;,
&amp;quot;tag&amp;quot;:&amp;quot;{IMAGE_TAG_NAME}&amp;quot;,
&amp;quot;status&amp;quot;:&amp;quot;DEPLOYING&amp;quot;,
&amp;quot;artifacts&amp;quot;:[
{
&amp;quot;id&amp;quot;:&amp;quot;00000652-e4fb-41c7-a6da-33bee0600000&amp;quot;,
&amp;quot;artifact&amp;quot;:&amp;quot;{YOUR-REGISTRY-URL}-{YOUR-IMAGE-NAME}:{YOUR-TAG-NAME}&amp;quot;,
&amp;quot;version&amp;quot;:&amp;quot;{IMAGE_TAG_NAME}&amp;quot;,
&amp;quot;createdAt&amp;quot;:&amp;quot;2021-04-19 12:08:54&amp;quot;,
&amp;quot;componentName&amp;quot;:&amp;quot;charlescd-ui&amp;quot;,
&amp;quot;moduleName&amp;quot;:&amp;quot;ZupIT/charlescd&amp;quot;
},
{
&amp;quot;id&amp;quot;:&amp;quot;000000d2-4a50-408a-be38-c8e932200000&amp;quot;,
&amp;quot;artifact&amp;quot;:&amp;quot;{YOUR-REGISTRY-URL}-{YOUR-IMAGE-NAME}:{YOUR-TAG-NAME}&amp;quot;,
&amp;quot;version&amp;quot;:&amp;quot;{IMAGE_TAG_NAME}&amp;quot;,
&amp;quot;createdAt&amp;quot;:&amp;quot;2021-04-19 12:08:54&amp;quot;,
&amp;quot;componentName&amp;quot;:&amp;quot;charlescd-moove&amp;quot;,
&amp;quot;moduleName&amp;quot;:&amp;quot;ZupIT/charlescd&amp;quot;
}
]
}
&lt;/code>&lt;/pre>&lt;p>{% endapi-method-response-example %}}
{% endapi-method-response %}}
{% endapi-method-spec %}}
{% endapi-method %}}&lt;/p>
&lt;p>Veja um exemplo da requisição no formato &lt;strong>CURL&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">curl &amp;#39;https://charlescd.api.com/moove/v2/deployments&amp;#39; \
-H &amp;#39;x-workspace-id: 000009c4-9f58-4236-9936-ffcb04b00000&amp;#39; \
-H &amp;#39;x-charles-token: {YOUR_SYSTEM_TOKEN}&amp;#39; \
-H &amp;#39;content-type: application/json&amp;#39; \
--data-binary &amp;#39;{
&amp;#34;buildId&amp;#34;:&amp;#34;82a7d53e-14cc-4bae-85df-364a70eb9df7&amp;#34;,
&amp;#34;circleId&amp;#34;:&amp;#34;1611b6b3-6e04-4c48-aca9-c9297e18d66d&amp;#34;
}&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Você pode acompanhar a conclusão dos deployments utilizando os &lt;a href="definindo-workspace/web">&lt;strong>Webhooks&lt;/strong>&lt;/a>.&lt;/p></description></item></channel></rss>