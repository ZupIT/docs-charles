<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Charles C.D. – FAQ</title>
    <link>https://docs.charlescd.io/faq/</link>
    <description>Recent content in FAQ on Charles C.D.</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.charlescd.io/faq/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>FAQ: About Charles</title>
      <link>https://docs.charlescd.io/faq/about-charles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.charlescd.io/faq/about-charles/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2&gt;What is Charles?&lt;/h2&gt;
&lt;p&gt;CharlesCD is an open-source tool that makes more agile, safe, and continuous deployment, which allows development teams to validate their hypothesis with specific groups of users, simultaneously.&lt;/p&gt;
&lt;h2&gt;What is circle deploy?&lt;/h2&gt;
&lt;p&gt;The circle deploy is the pioneering concept created by Charles. Thanks to it, it&amp;rsquo;s possible to deploy the same application with different segmentations of users at the same time.&lt;/p&gt;
&lt;h2&gt;What is the main difference in Charles?&lt;/h2&gt;
&lt;p&gt;Unlike other ways of deployment, Charles allows developers to perform simultaneous segmentation and agroupment of users with circles.&lt;/p&gt;
&lt;p&gt;With the tool, the delivery process in traditional environments occurs in longer frequencies - weekly, biweekly, or even monthly - gains a new rhythm. The feedback cycle of your product becomes faster and effective, which means that you can manage your timing in a more intelligent and assertive way. ‌&lt;/p&gt;
&lt;p&gt;Besides, developers will be more encouraged to innovate and to make more implementations of new versions, once that identifying bugs is easier and creating circles helps on minimizing the error budget.&lt;/p&gt;
&lt;p&gt;For more information about microservices and Charles&#39; modules, check out the &lt;a href=&#34;https://docs.charlescd.io/overview/&#34;&gt;&lt;strong&gt;platform&amp;rsquo;s architecture&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>FAQ: Circle deploy vs Other deploys</title>
      <link>https://docs.charlescd.io/faq/circle-deploy-vs-other-deploys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.charlescd.io/faq/circle-deploy-vs-other-deploys/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2&gt;Circle deploy x Traditional deploy&lt;/h2&gt;
&lt;p&gt;In traditional deploys, it&amp;rsquo;s common that the application has to pass into different environments until it gets to production. With Charles, the circle deploy system works only in the production environment. The release validation is fragmented according to selected circles, in other words, you can open gradually the access to your release to more and more circles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.charlescd.io/shared/deploy-tradicional%20%282%29.png&#34; alt=&#34;Process of traditional deploy &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.charlescd.io/shared/deploy_em_circulos%20%283%29%20%281%29.png&#34; alt=&#34;Process of circle deploy&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Circle deploy x Blue-green deploys&lt;/h2&gt;
&lt;p&gt;At blue-green deployment, it&amp;rsquo;s possible to create two identical environments in your infrastructure, but with different versions of an application implemented in each other. In this way, it&amp;rsquo;s possible to test your hypothesis that, once confirmed, can be migrated from one version to another.&lt;/p&gt;
&lt;p&gt;The main benefit is that the downtime is zero, which brings more safety for the transition process. Despite this, it represents a higher cost because this deployment demands double of infrastructure to be executed.&lt;/p&gt;
&lt;p&gt;With Charles, the circle deploy offers to teams more confidence and agility on launching new versions, with zero downtime and no additional costs on infrastructure. Besides, it&amp;rsquo;s possible to filter, through circles, which users will validate your new application version.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.charlescd.io/shared/blue_green%20%281%29%20%281%29.png&#34; alt=&#34;Process of blue-green deploy&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.charlescd.io/shared/deploy_em_circulos%20%281%29%20%281%29.png&#34; alt=&#34;Process of circle deploy&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Circle deploy x Canary release&lt;/h2&gt;
&lt;p&gt;At canary release, it is done the gradual publishing of a software new version from routing within the infrastructure. As soon as the version is tested and it&amp;rsquo;s more trustworthy, your access is expanded to more users from your base.&lt;/p&gt;
&lt;p&gt;However, this technique doesn&amp;rsquo;t have any strategy for choosing the users during this expansion. For this reason, it becomes more difficult to manage the existing versions of your system, which contributes to not working with many versions, generating limits of possibilities to test hypothesis.&lt;/p&gt;
&lt;p&gt;With Charles, the circle deployment logic follows a pattern similar to parallel change. That means that, in the platform, you can also start opening the access to a release to a reduced number of users and go gradually expanding as soon as the system passes into tests.&lt;/p&gt;
&lt;p&gt;The main difference of Charles is that, if you find any error or you have a hypothesis already validated, the reverse is easily done: you can take users off the circle or make deployment of another version with that group or even bring a version of your application to &lt;a href=&#34;https://docs.charlescd.io/key-concepts/&#34;&gt;&lt;strong&gt;open sea&lt;/strong&gt;&lt;/a&gt;, that is, to all the clients not in a Charle&amp;rsquo;s circle.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.charlescd.io/shared/deploy_em_circulos_x_canary_releases%20%282%29.png&#34; alt=&#34;Process of Canary Release&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.charlescd.io/shared/deploy_em_circulos%20%2810%29.png&#34; alt=&#34;Process of circle deploy&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>FAQ: Community</title>
      <link>https://docs.charlescd.io/faq/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.charlescd.io/faq/community/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2&gt;&lt;strong&gt;Which Charles&#39; repository?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;We work with monorepo concept on CharlesCD. That means that you can find all of our projects in this &lt;a href=&#34;https://github.com/ZupIT/charlescd&#34;&gt;&lt;strong&gt;public repository&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Do you want to report an issue or suggest a doc change?&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Access our Github repository  &lt;code&gt;ZupIT/charlescd&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Point out which branch do you want to create your pull request (PR);&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

It is important that, before you create a PR, just confirm if the request refers to the correct branch: for English documentation is &lt;code&gt;englishdocs&lt;/code&gt;and for the Portuguese documentation is &lt;code&gt;v0.2.1.&lt;/code&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;While you are writing, include the &amp;ldquo;Docs&amp;rdquo; label, so we are able to quickly identify that is a request for our documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your pull request will go through two rounds of review before being published.&lt;/p&gt;
&lt;p&gt;For more information on how to contribute with Charles, check out our &lt;a href=&#34;https://github.com/ZupIT/charlescd/blob/master/CONTRIBUTING&#34;&gt;&lt;strong&gt;contribution information and policy&lt;/strong&gt;&lt;/a&gt; on Github.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
